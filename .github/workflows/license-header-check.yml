---
# Copyright The Linux Foundation and each contributor to LFX.
# SPDX-License-Identifier: MIT

name: License Header Check

on:
  workflow_call:
    inputs:
      copyright_line:
        description: "Copyright line to search for"
        required: false
        type: string
        default: "Copyright The Linux Foundation"
      include_files:
        description: "JSON array of file patterns to include"
        required: false
        type: string
        default: |
          [
            "*.go",
            "go.mod",
            "*.py",
            "*.html",
            "*.css",
            "*.ts",
            "*.js",
            "*.scss",
            "*.sh",
            "*.bash",
            "*.ksh",
            "*.csh",
            "*.tcsh",
            "*.fsh",
            "Makefile",
            "*.txt",
            "*.yaml",
            "*.yml",
            ".gitignore",
            "*.sql"
          ]
      exclude_pattern:
        description: "Regex pattern for files to exclude"
        required: false
        type: string
        default: "node_modules|.venv|organization-service.yaml|project-service.yaml|acs-service.yaml|user-service.yaml|api.*.compiled.yaml|.vendor-new|.pytest_cache|.idea"

permissions:
  contents: read
  pull-requests: write

jobs:
  license-header-check:
    name: License Header Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check License Headers
        run: |
          # Disable exit on error to prevent early termination
          set +e

          # A simple script that scans the source files checking for the license header.
          # Exits with a 0 if all source files have license headers
          # Exits with a 1 if one or more source files are missing a license header

          # These are the file patterns we should exclude - these are typically transient files not checked into source control
          exclude_pattern='${{ inputs.exclude_pattern }}'

          # These are the file patterns we should include
          # Adjust these filters based on the source files you are interested in checking
          include_files=($(echo '${{ inputs.include_files }}' | jq -r '.[]'))

          # Compile those into a formatted string to pass into find command
          include_pattern=""
          for file in "${include_files[@]}"; do
              # if include_pattern is not empty, add ` -o`, otherwise add nothing
              include_pattern+="${include_pattern:+ -o }-name '${file}'"
          done

          files=()
          echo "Scanning source code..."
          # Loads all the filenames into an array
          files=($(eval "find . -type f \( ${include_pattern} \) -print" | egrep -v "${exclude_pattern}"))

          # This is the copyright line to look for - adjust as necessary
          copyright_line="${{ inputs.copyright_line }}"

          # Flag to indicate if we were successful or not
          missing_license_header=0

          # For each file...
          echo "Checking ${#files[@]} source code files for the license header..."
          for file in "${files[@]}"; do
            # echo "Processing file ${file}..."

            # Header is typically one of the first few lines in the file...
            head -4 "${file}" | grep -q "${copyright_line}"
            # Find it? exit code value of 0 indicates the grep found a match
            exit_code=$?
            if [[ ${exit_code} -ne 0 ]]; then
              echo "${file} is missing the license header"
              # update our flag - we'll fail the test
              missing_license_header=1
            fi
          done

          # Summary
          if [[ ${missing_license_header} -eq 1 ]]; then
            echo "One or more source files is missing the license header."
          else
            echo "License check passed."
          fi

          # Exit with status code 0 = success, 1 = failed
          exit ${missing_license_header}
